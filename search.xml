<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>qml学习笔记(一)</title>
    <url>/2020/02/28/qml%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-%E4%B8%80/</url>
    <content><![CDATA[<h1 id="图片浏览器"><a href="#图片浏览器" class="headerlink" title="图片浏览器"></a>图片浏览器</h1><p>本文记录在实现过程中所遇到的问题。实现思路是用listview，将要浏览的图片载入进来，不想看的可以从图片浏览器中删除，但不实际删除图片。</p>
<a id="more"></a>

<h2 id="问题一：图片的批量添加与删除"><a href="#问题一：图片的批量添加与删除" class="headerlink" title="问题一：图片的批量添加与删除"></a>问题一：图片的批量添加与删除</h2><p>这个小项目中所用到的组件<code>FileDialog</code>用的是<code>Qt.labs.platform 1.0</code>中的。</p>
<h3 id="进行批量添加"><a href="#进行批量添加" class="headerlink" title="进行批量添加"></a>进行批量添加</h3><figure class="highlight qml"><table><tr><td class="code"><pre><span class="line"><span class="attribute">fileMode</span>: FileDialog.OpenFiles</span><br></pre></td></tr></table></figure>

<p>设置fileMode属性，打开后就能进行批量选择。</p>
<h4 id="添加图片写在FileDialog中accepted信号里"><a href="#添加图片写在FileDialog中accepted信号里" class="headerlink" title="添加图片写在FileDialog中accepted信号里"></a>添加图片写在FileDialog中accepted信号里</h4><figure class="highlight qml"><table><tr><td class="code"><pre><span class="line"><span class="attribute">onAccepted</span>: &#123;</span><br><span class="line">    <span class="title">do</span>&#123;</span><br><span class="line">        listmodel.append(&#123;<span class="string">"url"</span>: files[count]&#125;)</span><br><span class="line">	++count</span><br><span class="line">    &#125;<span class="keyword">while</span>(files[count])</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>acccepted信号在选择完毕后点击确认的时候发送。listmodel时ListModel的id，append()函数在ListModel最后添加一个新的模型元素。files的类型时list<string>,用来保存选择的文件的url。count最后设置为0,用于下一次的打开操作。</p>
<h3 id="图片的删除"><a href="#图片的删除" class="headerlink" title="图片的删除"></a>图片的删除</h3><p>不想浏览的图片可以直接删除(仅在图片浏览器里删除)。</p>
<h4 id="用一个Button的clicked信号实现。"><a href="#用一个Button的clicked信号实现。" class="headerlink" title="用一个Button的clicked信号实现。"></a>用一个Button的clicked信号实现。</h4><figure class="highlight qml"><table><tr><td class="code"><pre><span class="line"><span class="attribute">onClicked</span>: &#123;</span><br><span class="line">    <span class="keyword">if</span>(listview.count)&#123;</span><br><span class="line">	listmodel.remove(listview.currentIndex)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>listview是ListView的id。listview.count中记录的时ListView中的item总个数；listview.currentIndex记录当前item的index。listmodel.remove()删除item，有几种用法，目前学会一种，就是上面的一种。</p>
<h2 id="问题二：ListView、ListModel、delegate"><a href="#问题二：ListView、ListModel、delegate" class="headerlink" title="问题二：ListView、ListModel、delegate"></a>问题二：ListView、ListModel、delegate</h2><p>与ListView及其model和delegate的相关问题</p>
<h3 id="关于ListView的一些问题"><a href="#关于ListView的一些问题" class="headerlink" title="关于ListView的一些问题"></a>关于ListView的一些问题</h3><h4 id="显示问题"><a href="#显示问题" class="headerlink" title="显示问题"></a>显示问题</h4><p>方向有两种，垂直的和水平的，由orientation决定</p>
<figure class="highlight qml"><table><tr><td class="code"><pre><span class="line"><span class="attribute">orientation</span>: ListView.Horizontal</span><br></pre></td></tr></table></figure>

<p>由snapMode决定拖动后的结果</p>
<figure class="highlight qml"><table><tr><td class="code"><pre><span class="line"><span class="attribute">snapMode</span>: ListView.SnapOneItem</span><br><span class="line"><span class="attribute">highlightRangeMode</span>: ListView.StrictlyEnforceRange</span><br></pre></td></tr></table></figure>

<p>上面到效果是每次拖动移动一个item，但移动后ListView的currentIndex不会刷新，需要将highlightRangeMode设置为StrictlyEnforceRange才行。</p>
<h4 id="delegate问题"><a href="#delegate问题" class="headerlink" title="delegate问题"></a>delegate问题</h4><p>delegate用的是一个Image组件</p>
<figure class="highlight qml"><table><tr><td class="code"><pre><span class="line"><span class="title">Component</span> &#123;</span><br><span class="line">    <span class="attribute">id:</span><span class="string"> listdelegate</span></span><br><span class="line">    <span class="title">Image</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: listview.width</span><br><span class="line">        <span class="attribute">height</span>: listview.height</span><br><span class="line">	<span class="attribute">source</span>: <span class="built_in">url</span></span><br><span class="line">	<span class="attribute">fillMode</span>: Image.PreserveAspectFit</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>fillMode使图片被均匀的缩放适应而不被裁剪。source设置的url就是listmodel中每个元素的中的url。</p>
<h2 id="关键问题"><a href="#关键问题" class="headerlink" title="关键问题"></a>关键问题</h2><p>一开始我并没有设置Image的属性绑定，而是用锚定让它充满中个listview，但是图片却并没有进行相应变化，原本是多大导入后还是多大。这里重点记录一下，将Image的width和height绑定成listview的width和height，就可以了。</p>
]]></content>
      <categories>
        <category>qml</category>
      </categories>
      <tags>
        <tag>qml</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/02/28/hello-world/</url>
    <content><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>2020年2月28日17点15分，记录下我的第一篇博客。</p>
]]></content>
  </entry>
</search>
